#!/usr/bin/env bash
. $(dirname ${BASH_SOURCE})/../parse.sh

main() {

    ERROR() {
        dsl::die -n "Error while parsing command help :: " \
            "line ${line}, word ${word} :: " \
            "Expected \"$1\", got \"${token_name}\"."
    }

    START() {
        ARGUMENTS
    }

    ARGUMENTS() {
        dsl::read_token

        while (( token != TOKEN_EOF )); do

            if (( token == TOKEN_ARG_NAME )); then
                ARGUMENT
            else
                ERROR 'TOKEN_ARG_NAME'
            fi
        done
    }

    ARGUMENT() {
        arg_name=${identifier}
        dsl::yield ${PRODUCTION_ARG_NAME}
        dsl::read_token

        if (( token == TOKEN_ARG_ALIAS )); then
            ALIAS
        fi

        if (( token == TOKEN_REQUIRED )); then
            REQUIRED
        fi

        if (( token == TOKEN_DEFAULT )); then
            DEFAULT
        fi

        if (( token == TOKEN_ALLOWED )); then
            ALLOWED_VALUES
        fi
    }

    ALIAS() {
        dsl::yield ${PRODUCTION_ARG_ALIAS} "${identifier}"
        dsl::read_token
    }

    REQUIRED() {
        dsl::yield ${PRODUCTION_REQUIRED}
        dsl::read_token
    }

    DEFAULT() {
        dsl::read_token ${TOKEN_WORD}
        dsl::yield ${PRODUCTION_DEFAULT} "${identifier}"
        dsl::read_token
    }

    ALLOWED_VALUES() {
        dsl::read_token ${TOKEN_VALUES}
        dsl::read_token ${TOKEN_WORD}

        while true; do
            dsl::yield ${PRODUCTION_ALLOWED_VALUE} "${identifier}"
            dsl::read_token
            if (( token != TOKEN_WORD )); then break; fi
        done
    }

    START
}

main "$@"