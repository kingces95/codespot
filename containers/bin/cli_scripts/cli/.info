#!/usr/bin/env bash
. $(dirname ${BASH_SOURCE})/cli.sh

help() {
util::unindent << EOF
    Command
        cli

    Global Arguments
        --help -h               : Show this message and exit.
        --self-test             : Runs a self test.
EOF
}

main() {
    echo version 0.1.0
    echo licence MIT
    echo description Command Line Tool loader.
}

test() {
    util::indent <<< $(echo ok) \
        | assert::pipe_eq_exact \
            '    ok'

    util::unindent <<< $(echo '    ok') \
        | assert::pipe_eq_exact \
            'ok'

    assert::eq "$(util::this_file)" "${BASH_SOURCE[0]}" \
        "util::this_file"

    assert::eq "$(util::this_dir)" "$(dirname ${BASH_SOURCE[0]})" \
        "util::this_dir"

    assert::match $(util::time_up) "T\+[0-9][0-9]:[0-9][0-9]:[0-9][0-9]" \
        "util::time_up format"

    # echo > ${log}
    # ( cli::if_tty_then_redirect_to_file 2 "${log}" )
    # assert::empty_file_exists "${log}" "Redirect tty stderr to log file"

    # rm "${log}" 2> /dev/null 
    # ( cli::if_tty_then_redirect_to_file 3 "${log}" )
    # assert::file_does_not_exist "${log}" "Do not redirect non-tty to log file"

    # read line_number frame file < <(util::callstack)
    # assert::eq $(( LINENO - 1)) ${line_number}
    # assert::eq 'main' ${frame}
    # assert::eq "$0" "${file}"

    # line_number=$(( LINENO + 1 ))
    # cli::log_callstack 2>&1 > /dev/null \
    #     | assert::pipe_eq \
    #         'CALLSTACK:' \
    #         "    ${line_number} main $0"
}

shim "$@"